{"version":3,"sources":["components/Champions/index.tsx","utils/groupTeams.ts","data/groupScenario.ts","components/Group/index.tsx","utils/getGroupRanking.ts","components/GroupStage/index.tsx","components/Knockouts/index.tsx","utils/formatKnockoutTeams.ts","components/ThirdPlaceLeague/index.tsx","components/Flag/index.tsx","components/Share/index.tsx","utils/encodeScenario.ts","components/KnockoutMatch/index.tsx","data/thirdPlaceChart.ts","App.tsx","utils/decodeScenario.ts","index.tsx"],"names":["Champions","champions","setShowShare","className","width","height","src","alt","Flag","team","name","onClick","groupScenario","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","Group","teams","positions","groupIndex","handleClick","map","ranking","index","findIndex","el","length","getGroupRanking","GroupStage","matches","Knockouts","nextRound","title","roundIndex","formattedTeams","res","push","formatKnockoutTeams","match","KnockoutMatch","round","ThirdPlaceLeague","calculateThirdPlaceLeague","displayThirdPlaceStatus","style","flag","Share","url","code","groups","forEach","group","num","teamIndex","String","includes","key","Object","keys","find","toString","teamsData","fromCharCode","encodeScenario","navigator","clipboard","writeText","filter","thirdPlaceChart","knockout","App","useState","JSON","parse","stringify","data","setPositions","result","slice","groupTeams","showShare","useEffect","search","window","location","scenarioString","URLSearchParams","get","newPositions","calculateSecondRound","calculateThirdPlaceIntoKnockout","groupCode","substring","split","thirdsCode","knockoutCodes","groupNum","thirdPos","groupPos","elIndex","thirdTeams","newPositions2","decodedThirdPlaces","charCodeAt","thirdPositions","knockoutCode","decodedKnockoutRound","decodeScenario","secondRound","winner","second","thirdPlaceGroups","join","handleKnockoutClick","trigger","open","some","pop","sort","quarters","semis","final","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dbd6f00.chunk.js","sourcesContent":["import Confetti from \"react-confetti\";\nimport { Flag } from \"..\";\nimport \"./styles.scss\";\ninterface IChampions {\n  champions: {\n    name: string;\n    flag: string;\n    groupIndex?: number;\n  };\n  setShowShare: (showShare: boolean) => void;\n}\n\nexport default function Champions({ champions, setShowShare }: IChampions) {\n  return (\n    <div className=\"champions\">\n      <h2>Champions</h2>\n      <div className=\"champions-container\">\n        <Confetti width={270} height={270} />\n        <div className=\"champions-trophy\">\n          <img src=\"./img/trophy.png\" alt=\"euros trophy\" />\n        </div>\n        <Flag team={champions} width=\"80px\" />\n        <div className=\"champions-name\">{champions.name}</div>\n        <button\n          className=\"share share-desktop\"\n          onClick={() => setShowShare(true)}\n        >\n          Share Prediction\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Team } from \"./../types/Team\";\nexport const groupTeams = (teams: Team[]) => {\n  var result = [];\n  for (var i = 0; i < teams.length; i += 4) {\n    result.push(teams.slice(i, i + 4));\n  }\n  return result;\n};\n","export const groupScenario = {\n  a: \"1234\",\n  b: \"1243\",\n  c: \"1324\",\n  d: \"1342\",\n  e: \"1423\",\n  f: \"1432\",\n  g: \"2134\",\n  h: \"2143\",\n  i: \"2314\",\n  j: \"2341\",\n  k: \"2413\",\n  l: \"2431\",\n  m: \"3124\",\n  n: \"3142\",\n  o: \"3214\",\n  p: \"3241\",\n  q: \"3412\",\n  r: \"3421\",\n  s: \"4123\",\n  t: \"4132\",\n  u: \"4213\",\n  v: \"4231\",\n  w: \"4312\",\n  x: \"4321\",\n};\n","import { Flag } from \"..\";\nimport { Group as GroupType } from \"../../types/Group\";\nimport { Team } from \"../../types/Team\";\nimport { getGroupRanking } from \"../../utils\";\nimport \"./styles.scss\";\n\ninterface IGroup {\n  name: string;\n  teams: Team[];\n  positions: GroupType;\n  groupIndex: number;\n  handleClick: (team: Team, groupIndex: number) => void;\n}\n\nexport default function Group({\n  name,\n  teams,\n  positions,\n  groupIndex,\n  handleClick,\n}: IGroup) {\n  return (\n    <div className=\"group\">\n      <h2>{name}</h2>\n      {teams.map((team) => {\n        const ranking = getGroupRanking(team.name, positions.teams);\n        return (\n          <div\n            key={`group-stage-${team.name}`}\n            className=\"group-team-container\"\n            onClick={() => handleClick(team, groupIndex)}\n          >\n            <div className=\"group-team\">\n              <Flag team={team} width=\"40px\" />\n              <div>\n                <div>{team.name}</div>\n              </div>\n            </div>\n            <div className=\"group-position\">\n              <div className={ranking === \"out\" ? \"out\" : \"\"}>{ranking}</div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { Team } from \"./../types/Team\";\nexport const getGroupRanking = (name: string, teams: Team[]) => {\n  const index = teams.findIndex((el) => el.name === name) + 1;\n  if (index === 0 && teams.length === 3) return \"out\";\n  if (index === 0) return \"+\";\n  if (index === 1) return \"1st\";\n  if (index === 2) return \"2nd\";\n  if (index === 3) return \"3rd\";\n};\n","import { Group } from \"../../components\";\nimport { Group as IGroup } from \"../../types/Group\";\nimport { Team } from \"../../types/Team\";\nimport \"./styles.scss\";\n\ninterface IGroupStage {\n  matches: IGroup[];\n  teams: Team[][];\n  handleClick: (team: Team, groupIndex: number) => void;\n}\n\nexport default function GroupStage({\n  matches,\n  teams,\n  handleClick,\n}: IGroupStage) {\n  return (\n    <div>\n      <div className=\"info\">\n        Select the first, second and third place teams in each group\n      </div>\n      <div className=\"group-stage\">\n        {matches.map((el, index) => {\n          return (\n            <Group\n              key={el.name}\n              name={el.name}\n              groupIndex={index}\n              teams={teams[index]}\n              positions={matches[index]}\n              handleClick={handleClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { KnockoutMatch } from \"..\";\nimport { Rounds } from \"../../types/Rounds\";\nimport { Team } from \"../../types/Team\";\nimport { formatKnockoutTeams } from \"../../utils\";\nimport \"./styles.scss\";\n\ninterface IKnockouts {\n  teams: (Team | null)[];\n  handleClick: (team: Team, index: number, round: string) => void;\n  nextRound: Rounds;\n  title: string;\n  roundIndex: string;\n  positions: (Team | null)[];\n}\n\nexport default function Knockouts({\n  teams,\n  handleClick,\n  nextRound,\n  title,\n  roundIndex,\n  positions,\n}: IKnockouts) {\n  const formattedTeams = formatKnockoutTeams([...teams]);\n  return (\n    <div className=\"knockout-stage\">\n      <h2>{title}</h2>\n      <div className={`knockout-round-container bracket-${roundIndex}`}>\n        {formattedTeams.map((match, index) => {\n          return (\n            <div\n              key={`knockout-stage-${roundIndex}-${index}}`}\n              className=\"knockout-match bracket-team\"\n            >\n              <div>\n                {match[0] && match[1] && (\n                  <KnockoutMatch\n                    match={match[0]}\n                    index={index}\n                    nextRound={nextRound}\n                    round={positions}\n                    handleClick={handleClick}\n                  />\n                )}\n              </div>\n              {match[0] && match[1] && <div>v</div>}\n              <div>\n                {match[1] && match[0] && (\n                  <KnockoutMatch\n                    match={match[1]}\n                    index={index}\n                    nextRound={nextRound}\n                    round={positions}\n                    handleClick={handleClick}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Team } from \"./../types/Team\";\nexport const formatKnockoutTeams = (teams: (Team | null)[]) => {\n  const res = [];\n  for (let i = 0; i < teams.length; i += 2) {\n    res.push([teams[i], teams[i + 1]]);\n  }\n  return res;\n};\n","import { Flag } from \"..\";\nimport { Team } from \"../../types/Team\";\nimport \"./styles.scss\";\n\ninterface IThirdPlaceLeague {\n  teams: (Team | null)[];\n  calculateThirdPlaceLeague: (team: Team) => void;\n  positions: (Team | null)[];\n}\n\nexport default function ThirdPlaceLeague({\n  teams,\n  calculateThirdPlaceLeague,\n  positions,\n}: IThirdPlaceLeague) {\n  const displayThirdPlaceStatus = (\n    name: string,\n    positions: (Team | null)[]\n  ) => {\n    const index =\n      positions.findIndex((el) => {\n        if (el) {\n          return el.name === name;\n        } else return false;\n      }) + 1;\n    if (index === 0 && positions.length === 4)\n      return <div className=\"cross\">&#x2716;</div>;\n    return index === 0 ? (\n      \"\"\n    ) : index < 5 ? (\n      <div className=\"tick\">&#x2714;</div>\n    ) : (\n      <div className=\"cross\">&#x2716;</div>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"info\">\n        Check you have chosen a team from each group to finish first, second and\n        third. Then select the four third place teams you think will finish with\n        the most points.\n      </div>\n      <div className=\"third-place-league\">\n        {teams.map((team) => {\n          if (team) {\n            return (\n              <div\n                key={`third-place-league-${team.name}`}\n                className=\"third-place-container\"\n                onClick={() => calculateThirdPlaceLeague(team)}\n              >\n                <div className=\"third-place-team\">\n                  <Flag team={team} width=\"50px\" />\n                  <div>\n                    <div>{team.name}</div>\n                  </div>\n                </div>\n                <div className=\"third-place-selector\">\n                  <div>{displayThirdPlaceStatus(team.name, positions)}</div>\n                </div>\n              </div>\n            );\n          } else return null;\n        })}\n      </div>\n    </div>\n  );\n}\n","import \"./styles.scss\";\nimport { Team } from \"../../types/Team\";\n\ninterface IFlag {\n  team: Team;\n  width?: string;\n}\n\nexport default function Flag({ team, width = \"50px\" }: IFlag) {\n  return (\n    <img\n      style={{ width }}\n      src={`./img/flags/${team.flag}.svg`}\n      alt={`${team.name} flag`}\n    />\n  );\n}\n","import { Positions } from \"../../types/Positions\";\nimport { Team } from \"../../types/Team\";\nimport { encodeScenario } from \"../../utils\";\nimport \"./styles.scss\";\n\ninterface IShare {\n  setShowShare: (showShare: boolean) => void;\n  positions: Positions;\n  teams: Team[][];\n}\n\nexport default function Share({ setShowShare, positions, teams }: IShare) {\n  const url = encodeScenario(positions, teams);\n  return (\n    <div className=\"modal-overlay\" onClick={() => setShowShare(false)}>\n      <div className=\"modal\" onClick={() => setShowShare(true)}>\n        <div className=\"modal-container\">\n          <button className=\"close\" onClick={() => setShowShare(false)}>\n            &#x2716;\n          </button>\n          <div className=\"modal-link\">{url}</div>\n          <button\n            className=\"copy\"\n            onClick={() => navigator.clipboard.writeText(url)}\n          >\n            Copy Link\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Rounds } from \"./../types/Rounds\";\nimport { groupScenario } from \"./../data/groupScenario\";\nimport { Team } from \"./../types/Team\";\nimport { Positions } from \"./../types/Positions\";\nimport { CodeScenario } from \"./../types/CodeScenario\";\nimport teamsData from \"../data/teams.json\";\n\nexport const encodeScenario = (positions: Positions, teams: Team[][]) => {\n  // Converting the positions object to a string for use as a url parameter\n  let code = \"\";\n  //Loop through each group predicted positions and loop through the original positions of the teams. Store the original index as a number in the index of their predicted position\n  positions.groups.forEach((group, index) => {\n    let num = \"\";\n    group.teams.forEach((team) => {\n      let teamIndex = teams[index].findIndex((el) => el.name === team.name) + 1;\n      num += String(teamIndex);\n    });\n    //Only three teams positions are predicted so find the missing team index and push to fourth position in the string\n    for (let i = 1; i <= 4; i++) {\n      if (!num.includes(String(i))) num += String(i);\n    }\n\n    // Find the corresponding single letter that matches the four digit string. Concat these to make a 6 character string\n    const key = Object.keys(groupScenario).find(\n      (key) => groupScenario[key.toString() as CodeScenario] === num\n    );\n    code += key;\n  });\n\n  // Loop through each round. Find the index of the predicted winners from their original place in the teamData array. Convert the index to a letter and concat to the code string\n  const rounds = [\"thirdPositions\", \"quarters\", \"semis\", \"final\", \"champions\"];\n  rounds.forEach((round) => {\n    positions[round.toString() as Rounds].forEach((team) => {\n      if (team) {\n        let index = teamsData.teams.findIndex((el) => el.name === team.name);\n        code += String.fromCharCode(index + 97);\n      }\n    });\n  });\n  return `https://rzencoder.github.io/euros-predictor?scenario=${code}`;\n};\n","import { Flag } from \"..\";\nimport { Team } from \"../../types/Team\";\nimport \"./styles.scss\";\n\ninterface IKnockoutMatch {\n  match: Team;\n  index: number;\n  nextRound: string;\n  round: (Team | null)[];\n  handleClick: (match: Team, index: number, nextRound: string) => void;\n}\n\nexport default function KnockoutMatch({\n  match,\n  index,\n  round,\n  nextRound,\n  handleClick,\n}: IKnockoutMatch) {\n  return (\n    <div\n      className=\"knockout-team\"\n      onClick={() => handleClick(match, index, nextRound)}\n    >\n      <div className=\"knockout-team-name\">\n        <Flag team={match} width=\"40px\" />\n        <div>{match.name}</div>\n      </div>\n      <div className=\"knockout-selector\">\n        {round\n          .filter((el) => el !== null)\n          .find((el) => {\n            if (el) {\n              return el.name === match.name;\n            } else return false;\n          }) && <div>&#x2714;</div>}\n      </div>\n    </div>\n  );\n}\n","const thirdPlaceChart = [\n  { group: \"1234\", knockout: [1, 9, 5, 13] },\n  { group: \"1235\", knockout: [1, 9, 5, 13] },\n  { group: \"1236\", knockout: [1, 9, 5, 13] },\n  { group: \"1245\", knockout: [9, 5, 1, 13] },\n  { group: \"1246\", knockout: [9, 5, 1, 13] },\n  { group: \"1256\", knockout: [5, 9, 1, 13] },\n  { group: \"1345\", knockout: [5, 9, 13, 1] },\n  { group: \"1346\", knockout: [5, 9, 13, 1] },\n  { group: \"1356\", knockout: [5, 9, 1, 13] },\n  { group: \"1456\", knockout: [5, 9, 1, 13] },\n  { group: \"2345\", knockout: [9, 5, 13, 1] },\n  { group: \"2346\", knockout: [5, 9, 13, 1] },\n  { group: \"2356\", knockout: [5, 9, 13, 1] },\n  { group: \"2456\", knockout: [5, 9, 13, 1] },\n  { group: \"3456\", knockout: [5, 9, 13, 1] },\n];\n\nexport default thirdPlaceChart;\n","import { useEffect, useState } from \"react\";\nimport {\n  GroupStage,\n  ThirdPlaceLeague,\n  Knockouts,\n  Champions,\n  Share,\n} from \"./components\";\nimport teamsData from \"./data/teams.json\";\nimport data from \"./data/data.json\";\nimport thirdPlaceChart from \"./data/thirdPlaceChart\";\nimport Collapsible from \"react-collapsible\";\nimport { decodeScenario, groupTeams } from \"./utils\";\nimport { Team } from \"./types/Team\";\nimport { Positions } from \"./types/Positions\";\nimport { Rounds } from \"./types/Rounds\";\n\nfunction App() {\n  const [positions, setPositions] = useState<Positions>(\n    JSON.parse(JSON.stringify(data))\n  );\n  const [teams] = useState(groupTeams(teamsData.teams));\n  const [showShare, setShowShare] = useState(false);\n\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let scenarioString = params.get(\"scenario\");\n    if (scenarioString && scenarioString.length === 25)\n      decodeScenario(\n        scenarioString,\n        { ...positions },\n        teams,\n        calculateSecondRound,\n        calculateThirdPlaceIntoKnockout\n      );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleGroupSelect = (team: Team, groupIndex: number) => {\n    const group: Team[] = [...positions.groups[groupIndex].teams];\n    if (group.some((el) => el.name === team.name)) {\n      if (group[group.length - 1].name === team.name) {\n        group.pop();\n      } else {\n        group.length = 0;\n      }\n    } else if (group.length === 3) {\n      group.length = 0;\n    } else {\n      group.push(team);\n    }\n    const newPositions = { ...positions };\n    newPositions.groups[groupIndex].teams = group;\n    calculateSecondRound(newPositions);\n  };\n\n  const calculateSecondRound = (newPositions: Positions) => {\n    newPositions.groups.forEach((group, groupIndex) => {\n      newPositions.secondRound[group.winner] = null;\n      newPositions.secondRound[group.second] = null;\n      newPositions.thirdTeams[groupIndex] = null;\n      group.teams.forEach((team, index) => {\n        if (index === 0) {\n          newPositions.secondRound[group.winner] = team;\n        } else if (index === 1) {\n          newPositions.secondRound[group.second] = team;\n        } else if (index === 2) {\n          newPositions.thirdTeams[groupIndex] = { ...team, groupIndex };\n        }\n      });\n    });\n    setPositions(newPositions);\n    return newPositions;\n  };\n\n  const calculateThirdPlaceLeague = (team: Team) => {\n    const thirdTeams = [...positions.thirdPositions];\n    if (\n      thirdTeams.some((el) => {\n        if (el !== null) {\n          return el.name === team.name;\n        } else {\n          return false;\n        }\n      })\n    ) {\n      // @ts-ignore: Object is possibly 'null'\n      if (\n        thirdTeams[thirdTeams.length - 1] &&\n        // @ts-ignore: Object is possibly 'null'\n        thirdTeams[thirdTeams.length - 1].name === team.name\n      ) {\n        thirdTeams.pop();\n      } else {\n        thirdTeams.length = 0;\n      }\n    } else {\n      if (thirdTeams.length < 4) {\n        thirdTeams.push(team);\n      } else {\n        thirdTeams.length = 0;\n      }\n    }\n\n    const newPositions = { ...positions };\n    newPositions.secondRound[1] = null;\n    newPositions.secondRound[5] = null;\n    newPositions.secondRound[9] = null;\n    newPositions.secondRound[13] = null;\n\n    if (thirdTeams.length > 3) {\n      // @ts-ignore: Object is possibly 'null'\n      thirdTeams.sort((a, b) => a.groupIndex - b.groupIndex);\n      newPositions.thirdPositions = thirdTeams;\n      calculateThirdPlaceIntoKnockout(newPositions);\n    } else {\n      newPositions.thirdPositions = thirdTeams;\n      setPositions(newPositions);\n    }\n  };\n\n  const calculateThirdPlaceIntoKnockout = (newPositions: Positions) => {\n    let thirdPlaceGroups = newPositions.thirdPositions\n      // @ts-ignore: Object is possibly 'null'\n      .map((el) => el.groupIndex + 1)\n      .join(\"\");\n    // @ts-ignore: Object is possibly 'null'\n    const matches = thirdPlaceChart.find((el) => el.group === thirdPlaceGroups);\n    if (matches) {\n      newPositions.thirdPositions.map((team, index) => {\n        return (newPositions.secondRound[matches.knockout[index]] = team);\n      });\n    }\n    setPositions(newPositions);\n  };\n\n  const handleKnockoutClick = (team: Team, index: number, round: string) => {\n    const newPositions = { ...positions };\n    newPositions[round.toString() as Rounds][index] = team;\n    setPositions(newPositions);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">\n        Euro <span>2020</span> Predictor\n      </h1>\n      <Collapsible trigger=\"Group Stage\" open>\n        <GroupStage\n          matches={positions.groups}\n          teams={teams}\n          handleClick={handleGroupSelect}\n        />\n      </Collapsible>\n      <Collapsible trigger=\"Third Place Rating\" open>\n        {!positions.thirdTeams.some((el) => el === null) && (\n          <div>\n            <ThirdPlaceLeague\n              calculateThirdPlaceLeague={calculateThirdPlaceLeague}\n              teams={positions.thirdTeams}\n              positions={positions.thirdPositions}\n            />\n          </div>\n        )}\n      </Collapsible>\n      <Collapsible trigger=\"Knockout Stage\" open>\n        <div className=\"knockout-container\">\n          <Knockouts\n            teams={positions.secondRound}\n            handleClick={handleKnockoutClick}\n            nextRound=\"quarters\"\n            title=\"Round of 16\"\n            roundIndex=\"1\"\n            positions={positions[\"quarters\"]}\n          />\n          <Knockouts\n            teams={positions.quarters}\n            handleClick={handleKnockoutClick}\n            nextRound=\"semis\"\n            title=\"Quarter Finals\"\n            roundIndex=\"2\"\n            positions={positions[\"semis\"]}\n          />\n          <Knockouts\n            teams={positions.semis}\n            handleClick={handleKnockoutClick}\n            title=\"Semi Finals\"\n            nextRound=\"final\"\n            roundIndex=\"3\"\n            positions={positions[\"final\"]}\n          />\n          <Knockouts\n            teams={positions.final}\n            handleClick={handleKnockoutClick}\n            nextRound=\"champions\"\n            title=\"Final\"\n            roundIndex=\"4\"\n            positions={positions[\"champions\"]}\n          />\n          {positions.champions[0] && (\n            <Champions\n              champions={positions.champions[0]}\n              setShowShare={setShowShare}\n            />\n          )}\n        </div>\n      </Collapsible>\n      {positions.champions[0] && (\n        <button\n          className=\"share share-mobile\"\n          onClick={() => setShowShare(true)}\n        >\n          Share Prediction\n        </button>\n      )}\n      {showShare && (\n        <Share\n          setShowShare={setShowShare}\n          positions={positions}\n          teams={teams}\n        />\n      )}\n      <div>\n        <button\n          className=\"reset\"\n          onClick={() => setPositions(JSON.parse(JSON.stringify(data)))}\n        >\n          Reset Prediction\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { Rounds } from \"./../types/Rounds\";\nimport { Positions } from \"./../types/Positions\";\nimport { groupScenario } from \"../data/groupScenario\";\nimport teamsData from \"../data/teams.json\";\nimport { Team } from \"../types/Team\";\nimport { CodeScenario } from \"../types/CodeScenario\";\n\n// Converting the url query from string back into an object containing the predictions for that scenario\nexport const decodeScenario = (\n  code: string,\n  newPositions: Positions,\n  teams: Team[][],\n  calculateSecondRound: (newPositions: Positions) => Positions,\n  calculateThirdPlaceIntoKnockout: (newPositions: Positions) => void\n) => {\n  //Split the code by rounds\n  const groupCode = code.substring(0, 6).split(\"\");\n  const thirdsCode = code.substring(6, 10).split(\"\");\n  const quartersCode = [\"quarters\", code.substring(10, 18).split(\"\")];\n  const semisCode = [\"semis\", code.substring(18, 22).split(\"\")];\n  const finalCode = [\"final\", code.substring(22, 24).split(\"\")];\n  const championsCode = [\"champions\", code.substring(24, 25).split(\"\")];\n  const knockoutCodes: any = [\n    quartersCode,\n    semisCode,\n    finalCode,\n    championsCode,\n  ];\n\n  // Convert the group code from a letter into a four number string containing the index of a team with the index being the position they have been predicted to finish\n  const groupNum = groupCode.map((el) =>\n    groupScenario[el.toString() as CodeScenario].split(\"\")\n  );\n\n  const thirdPos: (Team | null)[] = [];\n\n  // Loop through the four number string for each group and find the index of the team from their original start position in the group\n  groupNum.forEach((group, index) => {\n    let groupPos: Team[] = [];\n    group.forEach((el, elIndex) => {\n      teams[index].forEach((team, teamIndex) => {\n        // Push the team to the array apart from the fourth placed team which this isn't required for. Also add the third place team to an additional array for the third place league\n        if (el === String(teamIndex + 1) && elIndex !== 3) groupPos.push(team);\n        if (el === String(teamIndex + 1) && elIndex === 2)\n          thirdPos.push({ ...team, groupIndex: index });\n      });\n    });\n    newPositions.groups[index].teams = groupPos;\n    newPositions.thirdTeams = thirdPos;\n  });\n\n  const newPositions2 = calculateSecondRound(newPositions);\n\n  const decodedThirdPlaces = thirdsCode.map((el) => {\n    const team = teamsData.teams[el.charCodeAt(0) - 97];\n    let groupIndex;\n    teams.forEach((group, index) => {\n      group.forEach((el) => {\n        if (el.name === team.name) {\n          groupIndex = index;\n        }\n      });\n    });\n    return { ...team, groupIndex };\n  });\n\n  newPositions2.thirdPositions = decodedThirdPlaces;\n\n  knockoutCodes.forEach((knockoutCode: any) => {\n    const decodedKnockoutRound = knockoutCode[1].map(\n      (el: string) => teamsData.teams[el.charCodeAt(0) - 97]\n    );\n    newPositions2[knockoutCode[0].toString() as Rounds] = decodedKnockoutRound;\n  });\n  calculateThirdPlaceIntoKnockout(newPositions2);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}