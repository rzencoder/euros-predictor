{"version":3,"sources":["components/Champions/index.tsx","components/Group/index.tsx","components/GroupStage/index.tsx","components/Knockouts/index.tsx","components/ThirdPlaceLeague/index.tsx","data/thirdPlaceChart.ts","data/groupScenario.ts","App.tsx","utils/groupTeams.ts","index.tsx"],"names":["Champions","champions","className","width","height","src","alt","name","flag","format","basePath","Group","teams","positions","groupIndex","handleClick","map","team","ranking","index","findIndex","el","length","getRanking","onClick","GroupStage","matches","Knockouts","nextRound","title","roundIndex","formattedTeams","res","i","push","formatTeams","match","filter","find","ThirdPlaceLeague","calculateThirdPlaceLeague","thirdPlaceChart","group","knockout","groupScenario","a","b","c","d","e","f","g","h","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","App","useState","data","setPositions","result","slice","groupTeams","teamsData","calculateSecondRound","newPositions","groups","forEach","secondRound","winner","second","thirdTeams","calculateThirdPlaceIntoKnockout","thirdPlaceGroups","thirdPositions","join","handleKnockoutClick","round","trigger","open","groupName","some","pop","sort","quarters","semis","final","code","groupCode","substring","split","thirdsCode","quartersCode","semisCode","finalCode","championCode","groupNum","thirdPos","groupPos","elIndex","teamIndex","String","newPositions2","charCodeAt","knockoutDecoder","decodeScenario","num","pos","Object","keys","key","addTeamToCode","fromCharCode","encodeScenario","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9789ec36.chunk.js","sourcesContent":["import Flag from \"react-flags\";\r\nimport Confetti from 'react-confetti'\r\nimport './styles.scss';\r\n\r\nexport default function Champions({ champions }) {\r\n    return (\r\n        <div className=\"champions\">\r\n            <h2>Champions</h2>\r\n            <div className=\"champions-container\">\r\n                <Confetti\r\n                    width={270}\r\n                    height={270}\r\n                />\r\n                <div className=\"champions-trophy\">\r\n                    <img src=\"/img/trophy.png\" alt=\"euros trophy\" />\r\n                </div>\r\n                <Flag\r\n                    name={champions.flag}\r\n                    format=\"svg\"\r\n                    width={80}\r\n                    basePath=\"/img/flags\"\r\n                    alt={`${champions.name} flag`} />\r\n                <div className=\"champions-name\">{champions.name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Flag from \"react-flags\";\r\nimport './styles.scss';\r\n\r\nexport default function Group({ name, teams, positions, groupIndex, handleClick }) {\r\n    const getRanking = (name) => {\r\n        const index = positions.teams.findIndex(el => el.name === name) + 1\r\n        if (index === 0 && positions.teams.length === 3) return \"out\"\r\n        if (index === 0) return \"+\"\r\n        if (index === 1) return \"1st\"\r\n        if (index === 2) return \"2nd\"\r\n        if (index === 3) return \"3rd\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"group\">\r\n            <h2>{name}</h2>\r\n            {teams.map(team => {\r\n                const ranking = getRanking(team.name);\r\n                return (\r\n                    <div key={`group-stage-${team.name}`} className=\"group-team-container\" onClick={() => handleClick(team, groupIndex)}>\r\n                        <div className=\"group-team\">\r\n                            <Flag\r\n                                name={team.flag}\r\n                                format=\"svg\"\r\n                                width={50}\r\n                                basePath=\"/img/flags\"\r\n                                alt={`${team.name} flag`} />\r\n                            <div><div>{team.name}</div></div>\r\n                        </div>\r\n                        <div className=\"group-position\">\r\n                            <div className={ranking === \"out\" ? \"out\" : \"\"}>{ranking}</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import { Group } from \"../../components\";\r\nimport './styles.scss';\r\n\r\nexport default function GroupStage({ matches, teams, handleClick }) {\r\n    return (\r\n        <div>\r\n            <div className=\"info\">Select the first, second and third place teams in each group</div>\r\n            <div className=\"group-stage\">\r\n                {matches.map((el, index) => {\r\n                    return <Group key={el.name} name={el.name} groupIndex={index} teams={teams[index]} positions={matches[index]} handleClick={handleClick} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Flag from \"react-flags\";\r\nimport './styles.scss';\r\n\r\nexport default function Knockouts({ teams, handleClick, nextRound, title, roundIndex, positions }) {\r\n    const formatTeams = (teams) => {\r\n        const res = [];\r\n        for (let i = 0; i < teams.length; i += 2) {\r\n            res.push([teams[i], teams[i + 1]])\r\n        }\r\n        return res\r\n    }\r\n\r\n    const formattedTeams = formatTeams(teams)\r\n\r\n    return (\r\n        <div className=\"knockout-stage\" >\r\n            <h2>{title}</h2>\r\n            <div className={`knockout-round-container bracket-${roundIndex}`}>\r\n                {formattedTeams.map((match, index) => {\r\n                    return (\r\n                        <div key={`knockout-stage-${roundIndex}-${index}}`} className=\"knockout-match bracket-team\">\r\n                            <div>\r\n                                {match[0] &&\r\n                                    <div className=\"knockout-team\" onClick={() => handleClick(match[0], index, nextRound)}>\r\n                                        <div className=\"knockout-team-name\">\r\n                                            <Flag\r\n                                                name={match[0].flag}\r\n                                                format=\"svg\"\r\n                                                width={40}\r\n                                                basePath=\"/img/flags\"\r\n                                                alt={`${match[0].name} flag`} />\r\n                                            <div>{match[0].name}</div>\r\n                                        </div>\r\n                                        <div className=\"knockout-selector\">\r\n                                            {positions[nextRound].filter(el => el !== null).find(el => el.name === match[0].name) && <div>&#x2714;</div>}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            {(match[0] || match[1]) && <div>v</div>}\r\n                            <div>\r\n                                {match[1] &&\r\n                                    <div className=\"knockout-team\" onClick={() => handleClick(match[1], index, nextRound)}>\r\n                                        <div className=\"knockout-team-name\">\r\n                                            <Flag\r\n                                                name={match[1].flag}\r\n                                                format=\"svg\"\r\n                                                width={40}\r\n                                                basePath=\"/img/flags\"\r\n                                                alt={`${match[1].name} flag`} />\r\n                                            <div >{match[1].name}</div>\r\n                                        </div>\r\n                                        <div className=\"knockout-selector\">\r\n                                            {positions[nextRound].filter(el => el !== null).find(el => el.name === match[1].name) && <div>&#x2714;</div>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Flag from \"react-flags\";\r\nimport './styles.scss';\r\n\r\nexport default function ThirdPlaceLeague({ teams, calculateThirdPlaceLeague, positions }) {\r\n    const getRanking = (name) => {\r\n        const index = positions.findIndex(el => el.name === name) + 1\r\n        if (index === 0 && positions.length === 4) return <div className=\"cross\">&#x2716;</div>\r\n        return index === 0 ? \"\" : index < 5 ? <div className=\"tick\">&#x2714;</div> : <div className=\"cross\">&#x2716;</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"info\">Check you have chosen a team from each group to finish first, second and third. Then select the four third place teams you think will finish with the most points.</div>\r\n            <div className=\"third-place-league\">\r\n                {teams.map(team => {\r\n                    return (\r\n                        <div key={`third-place-league-${team.name}`} className=\"third-place-container\" onClick={() => calculateThirdPlaceLeague(team)}>\r\n                            <div className=\"third-place-team\">\r\n                                <Flag\r\n                                    name={team.flag}\r\n                                    format=\"svg\"\r\n                                    width={50}\r\n                                    basePath=\"/img/flags\"\r\n                                    alt={`${team.name} flag`} />\r\n                                <div><div>{team.name}</div></div>\r\n                            </div>\r\n                            <div className=\"third-place-selector\"><div>{getRanking(team.name)}</div></div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const thirdPlaceChart = [\r\n  { group: \"1234\", knockout: [1, 9, 5, 13] },\r\n  { group: \"1235\", knockout: [1, 9, 5, 13] },\r\n  { group: \"1236\", knockout: [1, 9, 5, 13] },\r\n  { group: \"1245\", knockout: [9, 5, 1, 13] },\r\n  { group: \"1246\", knockout: [9, 5, 1, 13] },\r\n  { group: \"1256\", knockout: [5, 9, 1, 13] },\r\n  { group: \"1345\", knockout: [5, 9, 13, 1] },\r\n  { group: \"1346\", knockout: [5, 9, 13, 1] },\r\n  { group: \"1356\", knockout: [5, 9, 1, 13] },\r\n  { group: \"1456\", knockout: [5, 9, 1, 13] },\r\n  { group: \"2345\", knockout: [9, 5, 13, 1] },\r\n  { group: \"2346\", knockout: [5, 9, 13, 1] },\r\n  { group: \"2356\", knockout: [5, 9, 13, 1] },\r\n  { group: \"2456\", knockout: [5, 9, 13, 1] },\r\n  { group: \"3456\", knockout: [5, 9, 13, 1] },\r\n];\r\n\r\nexport default thirdPlaceChart;\r\n","export const groupScenario = {\r\n  a: \"1234\",\r\n  b: \"1243\",\r\n  c: \"1324\",\r\n  d: \"1342\",\r\n  e: \"1423\",\r\n  f: \"1432\",\r\n  g: \"2134\",\r\n  h: \"2143\",\r\n  i: \"2314\",\r\n  j: \"2341\",\r\n  k: \"2413\",\r\n  l: \"2431\",\r\n  m: \"3124\",\r\n  n: \"3142\",\r\n  o: \"3214\",\r\n  p: \"3241\",\r\n  q: \"3412\",\r\n  r: \"3421\",\r\n  s: \"4123\",\r\n  t: \"4132\",\r\n  u: \"4213\",\r\n  v: \"4231\",\r\n  w: \"4312\",\r\n  x: \"4321\",\r\n};\r\n","import { useEffect, useState } from 'react';\nimport { GroupStage, ThirdPlaceLeague, Knockouts, Champions } from './components';\nimport teamsData from './data/teams.json';\nimport data from './data/data.json';\nimport thirdPlaceChart from './data/thirdPlaceChart'\nimport { groupScenario } from './data/groupScenario'\nimport Collapsible from 'react-collapsible';\nimport { groupTeams } from './utils';\n\nfunction App() {\n  const [positions, setPositions] = useState(data);\n  const [teams] = useState(groupTeams(teamsData.teams));\n\n  const handleGroupSelect = (team, groupName) => {\n    const group = [...positions.groups[groupName].teams]\n    if (group.some(el => el.name === team.name)) {\n      if (group[group.length - 1].name === team.name) {\n        group.pop()\n      } else {\n        group.length = 0;\n      }\n    } else if (group.length === 3) {\n      group.length = 0;\n    } else {\n      group.push(team)\n    }\n    const newPositions = { ...positions };\n\n    newPositions.groups[groupName].teams = group\n    calculateSecondRound(newPositions)\n  }\n\n  const calculateSecondRound = (newPositions) => {\n    newPositions.groups.forEach((group, groupIndex) => {\n      newPositions.secondRound[group.winner] = null\n      newPositions.secondRound[group.second] = null\n      newPositions.thirdTeams[groupIndex] = null\n      group.teams.forEach((team, index) => {\n        if (index === 0) {\n          newPositions.secondRound[group.winner] = team\n        } else if (index === 1) {\n          newPositions.secondRound[group.second] = team\n        } else if (index === 2) {\n          newPositions.thirdTeams[groupIndex] = { ...team, groupIndex }\n        }\n      })\n    })\n    setPositions(newPositions)\n    return newPositions\n  }\n\n  const calculateThirdPlaceLeague = (team) => {\n    const thirdTeams = [...positions.thirdPositions];\n    if (thirdTeams.some(el => el.name === team.name)) {\n      if (thirdTeams[thirdTeams.length - 1].name === team.name) {\n        thirdTeams.pop()\n      } else {\n        thirdTeams.length = 0;\n      }\n    } else {\n      if (thirdTeams.length < 4) {\n        thirdTeams.push(team)\n      } else {\n        thirdTeams.length = 0\n      }\n    }\n\n    const newPositions = { ...positions }\n    newPositions.secondRound[1] = null;\n    newPositions.secondRound[5] = null;\n    newPositions.secondRound[9] = null;\n    newPositions.secondRound[13] = null;\n\n    if (thirdTeams.length > 3) {\n      thirdTeams.sort((a, b) => a.groupIndex - b.groupIndex)\n      newPositions.thirdPositions = thirdTeams\n      calculateThirdPlaceIntoKnockout(newPositions)\n    } else {\n      newPositions.thirdPositions = thirdTeams\n      setPositions(newPositions)\n    }\n  }\n\n  const calculateThirdPlaceIntoKnockout = (newPositions) => {\n    let thirdPlaceGroups = newPositions.thirdPositions.map(el => el.groupIndex + 1).join(\"\");\n    const matches = thirdPlaceChart.find(el => el.group === thirdPlaceGroups)\n    newPositions.thirdPositions.map((team, index) => {\n      return newPositions.secondRound[matches.knockout[index]] = team\n    })\n    setPositions(newPositions)\n  }\n\n  const handleKnockoutClick = (team, index, round) => {\n    const newPositions = { ...positions }\n    newPositions[round][index] = team\n    setPositions(newPositions)\n  }\n\n  const encodeScenario = () => {\n    let code = \"\"\n    teams.forEach(((group, index) => {\n      let num = \"\"\n      group.forEach(team => {\n        let pos = positions.groups[index].teams.findIndex(el => el.name === team.name) + 1\n        if (pos === 0) pos = 4;\n        num += String(pos)\n      })\n      const key = Object.keys(groupScenario).find(key => groupScenario[key] === num);\n      code += key;\n    }))\n\n    const addTeamToCode = (round) => {\n      positions[round].forEach(team => {\n        let index = teamsData.teams.findIndex(el => el.name === team.name);\n        code += String.fromCharCode(index + 97)\n      })\n    }\n    addTeamToCode('thirdPositions')\n    addTeamToCode('quarters')\n    addTeamToCode('semis')\n    addTeamToCode('final')\n    addTeamToCode('champions')\n  }\n\n  const decodeScenario = (code = \"xxxxxxjnrvvkjsnwrgkswgsgg\") => {\n    const groupCode = code.substring(0, 6).split('')\n    const thirdsCode = code.substring(6, 10).split('')\n    const quartersCode = code.substring(10, 18).split('')\n    const semisCode = code.substring(18, 22).split('')\n    const finalCode = code.substring(22, 24).split('')\n    const championCode = code.substring(24, 25).split('')\n    const newPositions = { ...positions }\n    const groupNum = groupCode.map(el => groupScenario[el].split(''));\n    const thirdPos = []\n\n    groupNum.forEach((group, index) => {\n      let groupPos = []\n      group.forEach((el, elIndex) => {\n        teams[index].forEach((team, teamIndex) => {\n          if (el === String(teamIndex + 1) && elIndex !== 3) groupPos.push(team)\n          if (el === String(teamIndex + 1) && elIndex === 2) thirdPos.push({ ...team, groupIndex: index })\n        })\n      })\n      newPositions.groups[index].teams = groupPos\n      newPositions.thirdTeams = thirdPos\n    })\n    const newPositions2 = calculateSecondRound(newPositions)\n\n    const a = thirdsCode.map(el => {\n      const team = teamsData.teams[el.charCodeAt(0) - 97]\n      let groupIndex;\n      teams.forEach((group, index) => {\n        group.forEach(el => {\n          if (el.name === team.name) {\n            groupIndex = index;\n          }\n        })\n      })\n      return { ...team, groupIndex }\n    })\n\n    const knockoutDecoder = (round, code) => {\n      const a = code.map(el => teamsData.teams[el.charCodeAt(0) - 97])\n      newPositions2[round] = a;\n    }\n\n    knockoutDecoder(\"quarters\", quartersCode)\n    knockoutDecoder(\"semis\", semisCode)\n    knockoutDecoder(\"final\", finalCode)\n    knockoutDecoder(\"champions\", championCode)\n    newPositions2.thirdPositions = a\n    calculateThirdPlaceIntoKnockout(newPositions2)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Euro <span>2020</span> Predictor</h1>\n      <Collapsible trigger=\"Group Stage\" open>\n        <GroupStage matches={positions.groups} teams={teams} handleClick={handleGroupSelect} />\n      </Collapsible>\n      <Collapsible trigger=\"Third Place Rating\" open>\n        {!positions.thirdTeams.some(el => el === null) &&\n          (<div>\n            <ThirdPlaceLeague calculateThirdPlaceLeague={calculateThirdPlaceLeague} teams={positions.thirdTeams} positions={positions.thirdPositions} />\n          </div>\n          )}\n      </Collapsible>\n      <Collapsible trigger=\"Knockout Stage\" open>\n        <div className=\"knockout-container\">\n          <Knockouts teams={positions.secondRound} handleClick={handleKnockoutClick} nextRound=\"quarters\" title=\"Round of 16\" roundIndex=\"1\" positions={positions} />\n          <Knockouts teams={positions.quarters} handleClick={handleKnockoutClick} nextRound=\"semis\" title=\"Quarter Finals\" roundIndex=\"2\" positions={positions} />\n          <Knockouts teams={positions.semis} handleClick={handleKnockoutClick} nextRound=\"final\" title=\"Semi Finals\" roundIndex=\"3\" positions={positions} />\n          <Knockouts teams={positions.final} handleClick={handleKnockoutClick} nextRound=\"champions\" title=\"Final\" roundIndex=\"4\" positions={positions} />\n          {positions.champions[0] && <Champions champions={positions.champions[0]} />}\n        </div>\n      </Collapsible>\n      <button onClick={() => { decodeScenario() }}>decode</button>\n      <button onClick={() => { encodeScenario() }}>encode</button>\n    </div>\n  );\n}\n\nexport default App;\n","export const groupTeams = (teams) => {\r\n  var result = [];\r\n  for (var i = 0; i < teams.length; i += 4) {\r\n    result.push(teams.slice(i, i + 4));\r\n  }\r\n  return result;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}